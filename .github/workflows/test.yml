name: Test

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: create .env file
        run: |
          echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
          echo BUCKET_REGION=${{ secrets.BUCKET_REGION }} >> .env
          echo DEBUG=${{ secrets.DEBUG }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo RDS_DB_NAME=${{ secrets.RDS_DB_NAME }} >> .env
          echo RDS_HOSTNAME=${{ secrets.RDS_HOSTNAME }} >> .env
          echo RDS_PASSWORD=${{ secrets.RDS_PASSWORD }} >> .env
          echo RDS_PORT=${{ secrets.RDS_PORT }} >> .env
          echo RDS_USERNAME=${{ secrets.RDS_USERNAME }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo SQL_ENGINE=${{ secrets.SQL_ENGINE }} >> .env
          echo TIME_ZONE=${{ secrets.TIME_ZONE }} >> .env
          echo VIDEOS_BUCKET=${{ secrets.VIDEOS_BUCKET }} >> .env
          echo CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }} >> .env
          echo ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }} >> .env
          echo REFRESH_TOKEN_EXPIRE_MINUTES=${{ secrets.REFRESH_TOKEN_EXPIRE_MINUTES }} >> .env
          echo TOKEN_TYPE=${{ secrets.TOKEN_TYPE }} >> .env
          echo TOKEN_ALGORITHM=${{ secrets.TOKEN_ALGORITHM }} >> .env
      - name: Build docker
        run: docker-compose -f docker-compose-dev.yml up -d --build
      - name: Test
        env:
          COMPOSE_INTERACTIVE_NO_CLI: 1
        run: docker-compose -f docker-compose-dev.yml exec -T web python app/manage.py test app/
