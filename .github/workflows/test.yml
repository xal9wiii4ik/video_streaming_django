name: Test

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: check
        env:
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          BUCKET_REGION: ${{ secrets.BUCKET_REGION }}
          DEBUG: ${{ secrets.DEBUG }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          RDS_DB_NAME: ${{ secrets.RDS_DB_NAME }}
          RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          RDS_PORT: ${{ secrets.RDS_PORT }}
          RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          SQL_ENGINE: ${{ secrets.SQL_ENGINE }}
          TIME_ZONE: ${{ secrets.TIME_ZONE }}
          VIDEOS_BUCKET: ${{ secrets.VIDEOS_BUCKET }}
        run: |
          echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
          echo BUCKET_REGION=${{ secrets.BUCKET_REGION }} >> .env
          echo DEBUG=${{ secrets.DEBUG }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo RDS_DB_NAME=${{ secrets.RDS_DB_NAME }} >> .env
          echo RDS_HOSTNAME=${{ secrets.RDS_HOSTNAME }} >> .env
          echo RDS_PASSWORD=${{ secrets.RDS_PASSWORD }} >> .env
          echo RDS_PORT=${{ secrets.RDS_PORT }} >> .env
          echo RDS_USERNAME=${{ secrets.RDS_USERNAME }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo SQL_ENGINE=${{ secrets.SQL_ENGINE }} >> .env
          echo TIME_ZONE=${{ secrets.TIME_ZONE }} >> .env
          echo VIDEOS_BUCKET=${{ secrets.VIDEOS_BUCKET }} >> .env
      - name: Build docker
        run: docker-compose up -d --build
      - name: Test
        env:
          COMPOSE_INTERACTIVE_NO_CLI: 1
        run: docker-compose exec -T web python manage.py test
